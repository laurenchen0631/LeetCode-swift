// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		896E69581CD533350049FEF4 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 896E69571CD533350049FEF4 /* main.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		896E69521CD533350049FEF4 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		89000EAB1EC6AED1000809DC /* 52. N-Queens II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "52. N-Queens II.playground"; sourceTree = "<group>"; };
		890268611EC007C200C239E6 /* 46. Permutations.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "46. Permutations.playground"; sourceTree = "<group>"; };
		890268621EC00B7000C239E6 /* 47. Permutations II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "47. Permutations II.playground"; sourceTree = "<group>"; };
		890C6E681ECE817C00F98E58 /* 58. Length of Last Word.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "58. Length of Last Word.playground"; sourceTree = "<group>"; };
		89123C1E1ED1357100609BCC /* 60. Permutation Sequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "60. Permutation Sequence.playground"; sourceTree = "<group>"; };
		891254411EAEF24D006B6D22 /* 26. Remove Duplicates from Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "26. Remove Duplicates from Sorted Array.playground"; sourceTree = "<group>"; };
		891254421EAF0461006B6D22 /* 27. Remove Element.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "27. Remove Element.playground"; sourceTree = "<group>"; };
		8912A3201EC3EEF20024A61F /* 49. Group Anagrams.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "49. Group Anagrams.playground"; sourceTree = "<group>"; };
		8915A86E1ED26C5E00B06069 /* 61. Rotate List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "61. Rotate List.playground"; sourceTree = "<group>"; };
		8916AA141ECD31CE00BB5B63 /* 57. Insert Interval.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "57. Insert Interval.playground"; sourceTree = "<group>"; };
		89226F731EC69BBE0011E2C2 /* 51. N-Queens.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "51. N-Queens.playground"; sourceTree = "<group>"; };
		8928A6861EB596C400587BB1 /* 35. Search Insert Position.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "35. Search Insert Position.playground"; sourceTree = "<group>"; };
		8928A6871EB5C66F00587BB1 /* 36. Valid Sudoku.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "36. Valid Sudoku.playground"; sourceTree = "<group>"; };
		8928A6881EB6CF8500587BB1 /* 37. Sudoku Solver.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "37. Sudoku Solver.playground"; sourceTree = "<group>"; };
		892A7C901EAB0AF70034C4C2 /* 20. Valid Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "20. Valid Parentheses.playground"; sourceTree = "<group>"; };
		892A7C911EAB11290034C4C2 /* 21. Merge Two Sorted Lists.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "21. Merge Two Sorted Lists.playground"; sourceTree = "<group>"; };
		892AB4231EA9ACF500DE9FB4 /* 19. Remove Nth Node From End of List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "19. Remove Nth Node From End of List.playground"; sourceTree = "<group>"; };
		892B25961EB48C8100D38D6B /* 34. Search for a Range.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "34. Search for a Range.playground"; sourceTree = "<group>"; };
		8930DF331CDB119700CE9070 /* 4. Median of Two Sorted Arrays .playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "4. Median of Two Sorted Arrays .playground"; sourceTree = "<group>"; };
		8939A8811ECFDAEF002961F2 /* 59. Spiral Matrix II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "59. Spiral Matrix II.playground"; sourceTree = "<group>"; };
		893A49A01EC7E6C100BEE1A9 /* 53. Maximum Subarray.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "53. Maximum Subarray.playground"; sourceTree = "<group>"; };
		8940643E1EB01C4C00EFECB4 /* 28. Implement strStr().playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "28. Implement strStr().playground"; sourceTree = "<group>"; };
		8940643F1EB027BB00EFECB4 /* 29. Divide Two Integers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "29. Divide Two Integers.playground"; sourceTree = "<group>"; };
		8941FA171ECBE68F008DFC71 /* 56. Merge Intervals.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "56. Merge Intervals.playground"; sourceTree = "<group>"; };
		894639DF1CDCAB990027531C /* 5. Longest Palindromic Substring.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "5. Longest Palindromic Substring.playground"; sourceTree = "<group>"; };
		89512BDE1EBD54FF00467616 /* 44. Wildcard Matching.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "44. Wildcard Matching.playground"; sourceTree = "<group>"; };
		8952270C1EB1831A00D21AAC /* 30. Substring with Concatenation of All Words.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "30. Substring with Concatenation of All Words.playground"; sourceTree = "<group>"; };
		895F815E1EAB1804000CF8D8 /* 22. Generate Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "22. Generate Parentheses.playground"; sourceTree = "<group>"; };
		89652C5C1EC54C5C00CBD36F /* 50. Pow(x, n).playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "50. Pow(x, n).playground"; sourceTree = "<group>"; };
		8969D35F1D00062C00569E85 /* 9. Palindrome Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "9. Palindrome Number.playground"; sourceTree = "<group>"; };
		896D33811EBD5E3F00BF4D7A /* 45. Jump Game II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "45. Jump Game II.playground"; sourceTree = "<group>"; };
		896E69541CD533350049FEF4 /* LeetCode */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = LeetCode; sourceTree = BUILT_PRODUCTS_DIR; };
		896E69571CD533350049FEF4 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		896E695E1CD533660049FEF4 /* 1. Two Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1. Two Sum.playground"; sourceTree = "<group>"; };
		896E695F1CD537710049FEF4 /* 2. Add Two Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2. Add Two Numbers.playground"; sourceTree = "<group>"; };
		8970C96B1EC93FD4002A88EE /* 54. Spiral Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "54. Spiral Matrix.playground"; sourceTree = "<group>"; };
		897260041CE0C824003E37BC /* 7. Reverse Integer .playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "7. Reverse Integer .playground"; sourceTree = "<group>"; };
		897442541EA0CB1A00D31E19 /* 10. Regular Expression Matching.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "10. Regular Expression Matching.playground"; sourceTree = "<group>"; };
		89775DEC1EBC10B1003528D2 /* 43. Multiply Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "43. Multiply Strings.playground"; sourceTree = "<group>"; };
		898395491EA8DC78002ECAC7 /* 17. Letter Combinations of a Phone Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "17. Letter Combinations of a Phone Number.playground"; sourceTree = "<group>"; };
		8983954B1EA8E43B002ECAC7 /* 18. 4Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "18. 4Sum.playground"; sourceTree = "<group>"; };
		898541A51EA39E1B007D3AA0 /* 14. Longest Common Prefix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "14. Longest Common Prefix.playground"; sourceTree = "<group>"; };
		8991644D1EC2A8C500C4E3CC /* 48. Rotate Image.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "48. Rotate Image.playground"; sourceTree = "<group>"; };
		8991644E1EC2A9CD00C4E3CC /* 13. Roman to Integer.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "13. Roman to Integer.playground"; sourceTree = "<group>"; };
		8991644F1EC2AA0C00C4E3CC /* 16. 3Sum Closest.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "16. 3Sum Closest.playground"; sourceTree = "<group>"; };
		899579121CF6CE340004216B /* 8. String to Integer (atoi).playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "8. String to Integer (atoi).playground"; sourceTree = "<group>"; };
		89A0F63F1EBB005A00F25C05 /* 42. Trapping Rain Water.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "42. Trapping Rain Water.playground"; sourceTree = "<group>"; };
		89BA671D1EBAA8A1008C6AE9 /* 41. First Missing Positive.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "41. First Missing Positive.playground"; sourceTree = "<group>"; };
		89C4DFD21EB322F900086975 /* 31. Next Permutation.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "31. Next Permutation.playground"; sourceTree = "<group>"; };
		89C4DFD31EB3530F00086975 /* 32. Longest Valid Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "32. Longest Valid Parentheses.playground"; sourceTree = "<group>"; };
		89C541FD1EA1FDF1008FCC27 /* 11. Container With Most Water.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "11. Container With Most Water.playground"; sourceTree = "<group>"; };
		89C541FE1EA1FDF1008FCC27 /* 12. Integer to Roman.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "12. Integer to Roman.playground"; sourceTree = "<group>"; };
		89C68C2A1EAC5588009460B1 /* 23. Merge k Sorted Lists.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "23. Merge k Sorted Lists.playground"; sourceTree = "<group>"; };
		89DF7BE41ECA967A00C7AAAB /* 55. Jump Game.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "55. Jump Game.playground"; sourceTree = "<group>"; };
		89EB09311EB8158D0093E288 /* 38. Count and Say.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "38. Count and Say.playground"; sourceTree = "<group>"; };
		89EB09321EB8471F0093E288 /* 39. Combination Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "39. Combination Sum.playground"; sourceTree = "<group>"; };
		89EB09331EB973690093E288 /* 40. Combination Sum II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "40. Combination Sum II.playground"; sourceTree = "<group>"; };
		89F0AC7F1CE09EE500F863D1 /* 6. ZigZag Conversion.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "6. ZigZag Conversion.playground"; sourceTree = "<group>"; };
		89F108881EB46014000E804B /* 33. Search in Rotated Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "33. Search in Rotated Sorted Array.playground"; sourceTree = "<group>"; };
		89F3E6521EA471FA0017B13B /* 15. 3Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "15. 3Sum.playground"; sourceTree = "<group>"; };
		89F7C01D1CD8FF0100BB5C84 /* 3. Longest Substring.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3. Longest Substring.playground"; sourceTree = "<group>"; };
		89FEDD471EAD883100FDA9E2 /* 24. Swap Nodes in Pairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "24. Swap Nodes in Pairs.playground"; sourceTree = "<group>"; };
		89FEDD481EAD952700FDA9E2 /* 25. Reverse Nodes in k-Group.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "25. Reverse Nodes in k-Group.playground"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		896E69511CD533350049FEF4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		896E694B1CD533350049FEF4 = {
			isa = PBXGroup;
			children = (
				896E69561CD533350049FEF4 /* LeetCode */,
				896E69551CD533350049FEF4 /* Products */,
			);
			sourceTree = "<group>";
		};
		896E69551CD533350049FEF4 /* Products */ = {
			isa = PBXGroup;
			children = (
				896E69541CD533350049FEF4 /* LeetCode */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		896E69561CD533350049FEF4 /* LeetCode */ = {
			isa = PBXGroup;
			children = (
				8915A86E1ED26C5E00B06069 /* 61. Rotate List.playground */,
				89123C1E1ED1357100609BCC /* 60. Permutation Sequence.playground */,
				8939A8811ECFDAEF002961F2 /* 59. Spiral Matrix II.playground */,
				890C6E681ECE817C00F98E58 /* 58. Length of Last Word.playground */,
				8916AA141ECD31CE00BB5B63 /* 57. Insert Interval.playground */,
				8941FA171ECBE68F008DFC71 /* 56. Merge Intervals.playground */,
				89DF7BE41ECA967A00C7AAAB /* 55. Jump Game.playground */,
				8970C96B1EC93FD4002A88EE /* 54. Spiral Matrix.playground */,
				893A49A01EC7E6C100BEE1A9 /* 53. Maximum Subarray.playground */,
				89000EAB1EC6AED1000809DC /* 52. N-Queens II.playground */,
				89226F731EC69BBE0011E2C2 /* 51. N-Queens.playground */,
				89652C5C1EC54C5C00CBD36F /* 50. Pow(x, n).playground */,
				8912A3201EC3EEF20024A61F /* 49. Group Anagrams.playground */,
				8991644D1EC2A8C500C4E3CC /* 48. Rotate Image.playground */,
				890268621EC00B7000C239E6 /* 47. Permutations II.playground */,
				890268611EC007C200C239E6 /* 46. Permutations.playground */,
				896D33811EBD5E3F00BF4D7A /* 45. Jump Game II.playground */,
				89512BDE1EBD54FF00467616 /* 44. Wildcard Matching.playground */,
				89775DEC1EBC10B1003528D2 /* 43. Multiply Strings.playground */,
				89A0F63F1EBB005A00F25C05 /* 42. Trapping Rain Water.playground */,
				89BA671D1EBAA8A1008C6AE9 /* 41. First Missing Positive.playground */,
				89EB09331EB973690093E288 /* 40. Combination Sum II.playground */,
				89EB09321EB8471F0093E288 /* 39. Combination Sum.playground */,
				89EB09311EB8158D0093E288 /* 38. Count and Say.playground */,
				8928A6881EB6CF8500587BB1 /* 37. Sudoku Solver.playground */,
				8928A6871EB5C66F00587BB1 /* 36. Valid Sudoku.playground */,
				8928A6861EB596C400587BB1 /* 35. Search Insert Position.playground */,
				892B25961EB48C8100D38D6B /* 34. Search for a Range.playground */,
				89F108881EB46014000E804B /* 33. Search in Rotated Sorted Array.playground */,
				89C4DFD31EB3530F00086975 /* 32. Longest Valid Parentheses.playground */,
				89C4DFD21EB322F900086975 /* 31. Next Permutation.playground */,
				8952270C1EB1831A00D21AAC /* 30. Substring with Concatenation of All Words.playground */,
				8940643F1EB027BB00EFECB4 /* 29. Divide Two Integers.playground */,
				8940643E1EB01C4C00EFECB4 /* 28. Implement strStr().playground */,
				891254421EAF0461006B6D22 /* 27. Remove Element.playground */,
				891254411EAEF24D006B6D22 /* 26. Remove Duplicates from Sorted Array.playground */,
				89FEDD481EAD952700FDA9E2 /* 25. Reverse Nodes in k-Group.playground */,
				89FEDD471EAD883100FDA9E2 /* 24. Swap Nodes in Pairs.playground */,
				89C68C2A1EAC5588009460B1 /* 23. Merge k Sorted Lists.playground */,
				895F815E1EAB1804000CF8D8 /* 22. Generate Parentheses.playground */,
				892A7C911EAB11290034C4C2 /* 21. Merge Two Sorted Lists.playground */,
				892A7C901EAB0AF70034C4C2 /* 20. Valid Parentheses.playground */,
				892AB4231EA9ACF500DE9FB4 /* 19. Remove Nth Node From End of List.playground */,
				8983954B1EA8E43B002ECAC7 /* 18. 4Sum.playground */,
				898395491EA8DC78002ECAC7 /* 17. Letter Combinations of a Phone Number.playground */,
				8991644F1EC2AA0C00C4E3CC /* 16. 3Sum Closest.playground */,
				89F3E6521EA471FA0017B13B /* 15. 3Sum.playground */,
				898541A51EA39E1B007D3AA0 /* 14. Longest Common Prefix.playground */,
				8991644E1EC2A9CD00C4E3CC /* 13. Roman to Integer.playground */,
				89C541FE1EA1FDF1008FCC27 /* 12. Integer to Roman.playground */,
				89C541FD1EA1FDF1008FCC27 /* 11. Container With Most Water.playground */,
				897442541EA0CB1A00D31E19 /* 10. Regular Expression Matching.playground */,
				8969D35F1D00062C00569E85 /* 9. Palindrome Number.playground */,
				899579121CF6CE340004216B /* 8. String to Integer (atoi).playground */,
				897260041CE0C824003E37BC /* 7. Reverse Integer .playground */,
				89F0AC7F1CE09EE500F863D1 /* 6. ZigZag Conversion.playground */,
				894639DF1CDCAB990027531C /* 5. Longest Palindromic Substring.playground */,
				8930DF331CDB119700CE9070 /* 4. Median of Two Sorted Arrays .playground */,
				89F7C01D1CD8FF0100BB5C84 /* 3. Longest Substring.playground */,
				896E695F1CD537710049FEF4 /* 2. Add Two Numbers.playground */,
				896E695E1CD533660049FEF4 /* 1. Two Sum.playground */,
				896E69571CD533350049FEF4 /* main.swift */,
			);
			path = LeetCode;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		896E69531CD533350049FEF4 /* LeetCode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 896E695B1CD533350049FEF4 /* Build configuration list for PBXNativeTarget "LeetCode" */;
			buildPhases = (
				896E69501CD533350049FEF4 /* Sources */,
				896E69511CD533350049FEF4 /* Frameworks */,
				896E69521CD533350049FEF4 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LeetCode;
			productName = LeetCode;
			productReference = 896E69541CD533350049FEF4 /* LeetCode */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		896E694C1CD533350049FEF4 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 0730;
				LastUpgradeCheck = 0830;
				ORGANIZATIONNAME = exwd;
				TargetAttributes = {
					896E69531CD533350049FEF4 = {
						CreatedOnToolsVersion = 7.3;
						LastSwiftMigration = 0800;
					};
				};
			};
			buildConfigurationList = 896E694F1CD533350049FEF4 /* Build configuration list for PBXProject "LeetCode" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 896E694B1CD533350049FEF4;
			productRefGroup = 896E69551CD533350049FEF4 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				896E69531CD533350049FEF4 /* LeetCode */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		896E69501CD533350049FEF4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				896E69581CD533350049FEF4 /* main.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		896E69591CD533350049FEF4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		896E695A1CD533350049FEF4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = macosx;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
			};
			name = Release;
		};
		896E695C1CD533350049FEF4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		896E695D1CD533350049FEF4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		896E694F1CD533350049FEF4 /* Build configuration list for PBXProject "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				896E69591CD533350049FEF4 /* Debug */,
				896E695A1CD533350049FEF4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		896E695B1CD533350049FEF4 /* Build configuration list for PBXNativeTarget "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				896E695C1CD533350049FEF4 /* Debug */,
				896E695D1CD533350049FEF4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 896E694C1CD533350049FEF4 /* Project object */;
}
